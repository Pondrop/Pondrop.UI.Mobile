variables:
  - group: Pondrop-Mobile-Dev
  
jobs:
  - job: Mobile
    pool:
      vmImage: 'macOS-latest'
    steps:

      # - task: JavaToolInstaller@0
      #   displayName: 'Install Java 11'
      #   inputs:
      #     versionSpec: '11'
      #     jdkArchitectureOption: 'x64'
      #     jdkSourceOption: 'PreInstalled'

      # - task: FlutterInstall@0
      #   displayName: 'Install Flutter'
      #   inputs:
      #     mode: 'auto'
      #     channel: 'stable'
      #     version: 'latest'

      # - task: FlutterBuild@0
      #   displayName: "Android Flutter Build"
      #   inputs:
      #     target: 'aab'
      #     projectDirectory: '.'
      #     buildNumber: '$(Build.BuildId)'
      #     buildName: '1.0.$(Build.BuildId)'
      #     entryPoint: 'lib/main.dart'
      #     extraArgs: '--no-tree-shake-icons'


      # - task: ios-bundle-version@1
      #   displayName: 'Set iOS version numbers'
      #   inputs:
      #     sourcePath: 'ios/Runner/Info.plist'
      #     versionCodeOption: 'buildid'
      #     versionCode: '$(Build.BuildId)'
      #     printFile: true
      

      # - task: FlutterBuild@0
      #   displayName: "iOS Flutter Build"
      #   inputs:
      #     target: 'ios'
      #     projectDirectory: '.'
      #     entryPoint: 'lib/main.dart'
      #     iosCodesign: false
      #     extraArgs: '--no-tree-shake-icons'

      # - task: FlutterTest@0
      #   displayName: "Run Flutter Tests"
      #   inputs:
      #     projectDirectory: '.'
      
      # # - task: AndroidSigning@2
      # #   inputs:
      # #     apkFiles: '**/*.aab'
      # #     jarsign: true
      # #     jarsignerKeystoreFile: 'key.jks'
      # #     jarsignerKeystorePassword: 'pondrop1!'
      # #     jarsignerKeystoreAlias: 'pondrop'
      # #     jarsignerKeyPassword: 'pondrop1!'
      # #     # The two Arguments working there magic:
      # #     jarsignerArguments: '-sigalg SHA256withRSA -digestalg SHA-256'
      # #     zipalign: true

      # - task: InstallAppleCertificate@2
      #   displayName: "Install Apple p12 cert"
      #   inputs:
      #     certSecureFile: "pondrop.p12"
      #     certPwd: $(certPassword)
      #     keychain: "temp"
      #     deleteCert: true
              
      # - task: InstallAppleProvisioningProfile@1
      #   displayName: "Install Apple Mobile Provisioning Profile"
      #   inputs:
      #     provisioningProfileLocation: "secureFiles"
      #     provProfileSecureFile: "Pondrop.mobileprovision"
      #     removeProfile: true
            
      # - task: Xcode@5
      #   displayName: "Code sign ipa for Distribution"
      #   inputs:
      #     actions: "build"
      #     xcWorkspacePath: "**/Runner.xcworkspace"
      #     scheme: "Runner"
      #     sdk: "iphoneos"
      #     configuration: "release"
      #     packageApp: true
      #     signingOption: "manual"
      #     signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      #     provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'          
            
      # - task: CopyFiles@2
      #   displayName: 'Copy iOS build package'
      #   inputs:
      #     contents: '**/*.ipa'
      #     targetFolder: '$(build.artifactStagingDirectory)'
      #     OverWrite: true

      # - task: CopyFiles@2
      #   displayName: 'Copy Android build package'
      #   inputs:
      #     contents: '**/*.aab'
      #     targetFolder: '$(build.artifactStagingDirectory)'
      #     OverWrite: true
          
      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'TestFlightDistribution.p12'

      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'testflight.mobileprovision'
        
      
      - task: CopyFiles@2
        displayName: 'Copy Mobile Provision package'
        inputs:
          contents: '$(Agent.TempDirectory)\testflight.mobileprovision'
          targetFolder: '$(build.artifactStagingDirectory)'
          OverWrite: true
          
      - task: CopyFiles@2
        displayName: 'Copy Certificate package'
        inputs:
          contents: '$(Agent.TempDirectory)\TestFlightDistribution.p12'
          targetFolder: '$(build.artifactStagingDirectory)'
          OverWrite: true

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: 'drop'